<?xml version="1.0" encoding="utf-8"?>
<!--
	<p>
	This component lays out the Restaurant Viewer, displaying a title, a RestaurantDisplayList, a TextArea
	for viewing the description of the Restaurant selected in the RestaurantDisplayList, and a button. When
	the button is clicked, it asks the RestaurantDisplayList to choose a Restaurant at random.
	</p>
	
	<p>
	As Restaurants are selected in the RestaurantDisplayList, this component captures the RestaurantSelectionEvents
	and displays the description for the Restaurant that was selected. This happens both when the Restaurants are selected
	manually, and when they are selected at random. 
	</p>
	
	<p>
	Finally, this component holds a reference to an ArrayCollection that acts as a data provider to the RestaurantDisplayList.
	The data is passed in from the outside, via code that is using this component. 
	</p>
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:rg="info.itsrandom.restaurantgrid.view.*"
	xmlns:view="info.itsrandom.lunchchooser.view.*"
	styleName="wrapper">
	
	<mx:Script>
		<![CDATA[
		   import info.itsrandom.lunchchooser.Registry;
		   import info.itsrandom.lunchchooser.events.RatingSliderChangeEvent;
		   import info.itsrandom.restaurantgrid.events.RestaurantSelectionEvent;
			
			/**
			 * Show the description of a Restaurant
			 **/		
			public function showDescription(event : RestaurantSelectionEvent) : void
			{
				this.descriptionLabel.text = event.restaurant.description;
			}
			
			private function filterDataProvider(event : RatingSliderChangeEvent) : void
			{
				this.restaurantList.filterByRating(event.rating);
			}
		]]>
	</mx:Script>
	
	<mx:Text id="title" 
		styleName="title" 
		text="@Resource(bundle='resources', key='title')" />
	
	<rg:RestaurantDisplayList id="restaurantList"
	   serviceUrl="{Registry.serviceUrl}"
		restaurantSelected="showDescription(event);"
		width="600" />
		
	<view:RatingsSlider id="ratingsSlider"
		ratingSliderChanged="filterDataProvider(event);"
		horizontalAlign="center" 
		width="600" />
	
	<mx:TextArea id="descriptionLabel" 
		text="@Resource(bundle='resources', key='description.label')" 
		width="100%" 
		height="150" 
		editable="false" 
		verticalScrollPolicy="auto"
		styleName="description" />
		
	<mx:Button id="findButton" 
		label="@Resource(bundle='resources', key='random.label')" 
		styleName="findButton"
		click="{restaurantList.findRandomRestaurant()}" />

</mx:VBox>