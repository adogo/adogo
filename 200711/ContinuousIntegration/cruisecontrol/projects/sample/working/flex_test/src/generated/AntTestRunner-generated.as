/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		AntTestRunner
 *	Source: 	C:\Users\ryan\Desktop\cruisecontrol\projects\sample\working\flex_test\src\AntTestRunner.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2007.11.06 17:01:10 PST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.controls.Label;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;

[Frame(extraClass="_AntTestRunner_FlexInit")]

[Frame(factoryClass="_AntTestRunner_mx_managers_SystemManager")]



public class AntTestRunner
	extends mx.core.Application
{

	[Bindable]
/**
 * @private
 **/
	public var status : mx.controls.Label;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        id: "status"
      })
    ]
  }}
})

    /**
     * @private
     **/
	public function AntTestRunner()
	{
		super();

		mx_internal::_document = this;

		//	our style settings


		//	ambient styles
		mx_internal::_AntTestRunner_StylesInit();

		//	properties

		//	events
		this.addEventListener("creationComplete", ___Application1_creationComplete);

	}

    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);



		super.initialize();
	}


			import flexunit.framework.tests.AllFrameworkTests;
			import flexunit.junit.JUnitTestRunner;
			import flexunit.framework.TestSuite;
			
			[Bindable]
			private var runner : JUnitTestRunner;
			
			private function onCreationComplete() : void
			{
			   status.text = "Please wait running test suite...";
			   
				runner = new JUnitTestRunner();
				runner.run( createSuite(), onTestComplete );
 			}
 			
 			private function onTestComplete() : void
 			{
 			   status.text = "Finished running test suite.";
 			   
 				fscommand( "quit" );
 			}
			
			private function createSuite() : TestSuite
			{
 				var ts : TestSuite = new TestSuite();
 				ts.addTest( AllFrameworkTests.suite() );
 				
 				return ts;
 			}
		



    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___Application1_creationComplete(event:mx.events.FlexEvent):void
{
	onCreationComplete()
}


	//	binding mgmt


	static mx_internal var _AntTestRunner_StylesInit_done : Boolean = false;

	mx_internal function _AntTestRunner_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_AntTestRunner_StylesInit_done)
			return;
		else
			mx_internal::_AntTestRunner_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;


		StyleManager.mx_internal::initProtoChainRoots();
	}




    /**
     * @private
     **/
    public var _bindingsByDestination : Object;
    /**
     * @private
     **/
    public var _bindingsBeginWithWord : Object;

}

}
